# Generated by Django 5.2.4 on 2025-07-21 22:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('numeric_value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('PUBLISH', 'Publish'), ('LOGIN', 'Login'), ('ROLE_ASSIGN', 'Role Assignment')], max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20)),
                ('credit_units', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
            ],
        ),
        migrations.CreateModel(
            name='CourseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assigned_courses', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecturer_assignments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.course')),
                ('enrolled_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrolled_students', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hod', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hod_of_departments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='departments',
            field=models.ManyToManyField(to='accounts.department'),
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dean', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dean_of_faculties', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty'),
        ),
        migrations.CreateModel(
            name='CarryOverCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_grade', models.CharField(max_length=2)),
                ('minimum_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_carryover_criteria', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='AlternativeLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('LECTURER', 'Lecturer'), ('ADMISSION_OFFICER', 'Admission Officer'), ('EXAM_OFFICER', 'Exam Officer'), ('HOD', 'Head of Department'), ('FACULTY_DEAN', 'Faculty Dean'), ('DAAA', 'DAAA'), ('SENATE', 'Senate'), ('SUPER_ADMIN', 'Super Admin')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_alternative_logins', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternative_logins', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_grading_scales', to=settings.AUTH_USER_MODEL)),
                ('faculty', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.level'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('exam_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('grade_point', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('is_carry_over', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED_TO_EXAM_OFFICER', 'Submitted to Exam Officer'), ('APPROVED_BY_EXAM_OFFICER', 'Approved by Exam Officer'), ('SUBMITTED_TO_HOD', 'Submitted to HOD'), ('APPROVED_BY_HOD', 'Approved by HOD'), ('SUBMITTED_TO_DEAN', 'Submitted to Faculty Dean'), ('APPROVED_BY_DEAN', 'Approved by Faculty Dean'), ('SUBMITTED_TO_DAAA', 'Submitted to DAAA'), ('APPROVED_BY_DAAA', 'Approved by DAAA'), ('SUBMITTED_TO_SENATE', 'Submitted to Senate'), ('PUBLISHED', 'Published'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results_created', to=settings.AUTH_USER_MODEL)),
                ('enrollment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.courseenrollment')),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('RESULT_SUBMITTED', 'Result Submitted'), ('RESULT_APPROVED', 'Result Approved'), ('RESULT_REJECTED', 'Result Rejected'), ('RESULT_PUBLISHED', 'Result Published'), ('CARRY_OVER_DETECTED', 'Carry Over Detected'), ('SESSION_CREATED', 'Session Created'), ('SESSION_LOCKED', 'Session Locked'), ('ROLE_ASSIGNED', 'Role Assigned')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.result')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResultApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('MODIFIED', 'Modified')], max_length=20)),
                ('role', models.CharField(choices=[('LECTURER', 'Lecturer'), ('EXAM_OFFICER', 'Exam Officer'), ('HOD', 'Head of Department'), ('FACULTY_DEAN', 'Faculty Dean'), ('DAAA', 'DAAA'), ('SENATE', 'Senate')], max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='accounts.result')),
                ('sent_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='received_approvals', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='result_approvals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matric_number', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admission_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_students', to=settings.AUTH_USER_MODEL)),
                ('current_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.level')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='courseenrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.student'),
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_configurations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GradeRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=2)),
                ('min_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade_point', models.DecimalField(decimal_places=2, max_digits=3)),
                ('grading_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranges', to='accounts.gradingscale')),
            ],
            options={
                'unique_together': {('grading_scale', 'grade')},
            },
        ),
        migrations.CreateModel(
            name='CarryOverList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.result')),
            ],
            options={
                'unique_together': {('session', 'result')},
            },
        ),
        migrations.CreateModel(
            name='ResultPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_method', models.CharField(choices=[('IMMEDIATE', 'Immediate - All students at once'), ('BY_FACULTY', 'By Faculty'), ('BY_DEPARTMENT', 'By Department'), ('BY_LEVEL', 'By Level'), ('CUSTOM', 'Custom Selection')], max_length=20)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('published_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='published_results', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.academicsession')),
                ('target_departments', models.ManyToManyField(blank=True, to='accounts.department')),
                ('target_faculties', models.ManyToManyField(blank=True, to='accounts.faculty')),
                ('target_levels', models.ManyToManyField(blank=True, to='accounts.level')),
            ],
            options={
                'unique_together': {('session',)},
            },
        ),
        migrations.AlterUniqueTogether(
            name='courseenrollment',
            unique_together={('student', 'course', 'session')},
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('LECTURER', 'Lecturer'), ('ADMISSION_OFFICER', 'Admission Officer'), ('EXAM_OFFICER', 'Exam Officer'), ('HOD', 'Head of Department'), ('FACULTY_DEAN', 'Faculty Dean'), ('DAAA', 'DAAA'), ('SENATE', 'Senate'), ('SUPER_ADMIN', 'Super Admin')], max_length=20)),
                ('is_primary', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='roles_assigned', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rms_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'role', 'faculty', 'department')},
            },
        ),
    ]
